include .env

PG_VARS=--env PG_USER=$(PG_USER) --env PG_PASS=$(PG_PASS) --env PG_DB=$(PG_DB) --env PG_HOST=$(PG_IP) --env PG_PORT=$(PG_PORT)
PG_VARS_BUILD=--build-arg PG_USER=$(PG_USER) --build-arg PG_PASS=$(PG_PASS) --build-arg PG_DB=$(PG_DB) --build-arg PG_HOST=$(PG_IP) --build-arg PG_PORT=$(PG_PORT)


crowapp-build:
	cd backend/crowapp && docker build --build-arg CROWAPP_PORT=$(CROWAPP_PORT) -t crow_app:1 .

crowapp-run:
	cd backend/crowapp && docker run -d -it --rm --name crow_app_container --env CROWAPP_PORT=$(CROWAPP_PORT) $(PG_VARS) --net $(SUBNET_NAME) --ip $(CROWAPP_IP) -p $(CROWAPP_PORT):$(CROWAPP_PORT) crow_app:1


aspnetapp-build:
	cd backend/aspnetapp && docker build --no-cache --build-arg ASPNETAPP_PORT=$(ASPNETAPP_PORT) $(PG_VARS_BUILD) -t aspnet_app:1 .

aspnetapp-run:
	cd backend/aspnetapp && docker run -d -it --rm --name aspnet_app_container --env ASPNETAPP_PORT=$(ASPNETAPP_PORT) $(PG_VARS) --net $(SUBNET_NAME) --ip $(ASPNETAPP_IP) -p $(ASPNETAPP_PORT):$(ASPNETAPP_PORT) aspnet_app:1


springbootapp-build:
	cd backend/springbootapp && docker build --build-arg SPRINGBOOTAPP_PORT=$(SPRINGBOOTAPP_PORT) $(PG_VARS_BUILD) -t springboot_app:1 .

springbootapp-run:
	cd backend/springbootapp && docker run -d -it --rm --name springboot_app_container --env SPRINGBOOTAPP_PORT=$(SPRINGBOOTAPP_PORT) $(PG_VARS) --net $(SUBNET_NAME) --ip $(SPRINGBOOTAPP_IP) -p $(SPRINGBOOTAPP_PORT):$(SPRINGBOOTAPP_PORT) springboot_app:1


railsapp-build:
	cd backend/railsapp && docker build --build-arg RAILSAPP_PORT=$(RAILSAPP_PORT) $(PG_VARS_BUILD) -t rails_app:1 .

railsapp-run:
	cd backend/railsapp && docker run -d -it --rm --name rails_app_container --env RAILSAPP_PORT=$(RAILSAPP_PORT) $(PG_VARS) --net $(SUBNET_NAME) --ip $(RAILSAPP_IP) -p $(RAILSAPP_PORT):$(RAILSAPP_PORT) rails_app:1


perlapp-build:
	cd backend/perlapp && docker build --build-arg PERLAPP_PORT=$(PERLAPP_PORT) $(PG_VARS_BUILD) -t perl_app:1 .

perlapp-run:
	cd backend/perlapp && docker run -d -it --rm --name perl_app_container --env PERLAPP_PORT=$(PERLAPP_PORT) $(PG_VARS) --net $(SUBNET_NAME) --ip $(PERLAPP_IP) -p $(PERLAPP_PORT):$(PERLAPP_PORT) perl_app:1


actixapp-build:
	cd backend/actixapp && docker build --build-arg ACTIXAPP_PORT=$(ACTIXAPP_PORT) $(PG_VARS_BUILD) -t actix_app:1 .

actixapp-run:
	cd backend/actixapp && docker run -d -it --rm --name actix_app_container --env ACTIXAPP_PORT=$(ACTIXAPP_PORT) $(PG_VARS) --net $(SUBNET_NAME) --ip $(ACTIXAPP_IP) -p $(ACTIXAPP_PORT):$(ACTIXAPP_PORT) actix_app:1


swiftapp-build:
	cd backend/swiftapp && docker build --build-arg SWIFTAPP_PORT=$(SWIFTAPP_PORT) $(PG_VARS_BUILD) -t swift_app:1 .

swiftapp-run:
	cd backend/swiftapp && docker run -d -it --rm --name swift_app_container --env SWIFTAPP_PORT=$(SWIFTAPP_PORT) $(PG_VARS) --net $(SUBNET_NAME) --ip $(SWIFTAPP_IP) -p $(SWIFTAPP_PORT):$(SWIFTAPP_PORT) swift_app:1


goapp-build:
	cd backend/goapp && docker build --build-arg GOAPP_PORT=$(GOAPP_PORT) $(PG_VARS_BUILD) -t go_app:1 .

goapp-run:
	cd backend/goapp && docker run -d -it --rm --name go_app_container --env GOAPP_PORT=$(GOAPP_PORT) --net $(SUBNET_NAME) --ip $(GOAPP_IP) -p $(GOAPP_PORT):$(GOAPP_PORT) $(PG_VARS) go_app:1


bunapp-build:
	cd backend/bunapp && docker build --build-arg BUNAPP_PORT=$(BUNAPP_PORT) $(PG_VARS_BUILD) -t bun_app:1 .

bunapp-run:
	cd backend/bunapp && docker run -d -it --rm --name bun_app_container --env BUNAPP_PORT=$(BUNAPP_PORT) $(PG_VARS) --net $(SUBNET_NAME) --ip $(BUNAPP_IP) -p $(BUNAPP_PORT):$(BUNAPP_PORT) bun_app:1


zigapp-build:
	cd backend/zigapp && docker build --build-arg ZIGAPP_PORT=$(ZIGAPP_PORT) $(PG_VARS_BUILD) -t zig_app:1 .

zigapp-run:
	cd backend/zigapp && docker run -d -it --rm --name zig_app_container --env ZIGAPP_PORT=$(ZIGAPP_PORT) $(PG_VARS) --net $(SUBNET_NAME) --ip $(ZIGAPP_IP) -p $(ZIGAPP_PORT):$(ZIGAPP_PORT) zig_app:1


vibeapp-build:
	cd backend/vibeapp && docker build --build-arg VIBEAPP_PORT=$(VIBEAPP_PORT) $(PG_VARS_BUILD) -t vibe_app:1 .

vibeapp-run:
	cd backend/vibeapp && docker run -d -it --rm --name vibe_app_container --env VIBEAPP_PORT=$(VIBEAPP_PORT) $(PG_VARS) --net $(SUBNET_NAME) --ip $(VIBEAPP_IP) -p $(VIBEAPP_PORT):$(VIBEAPP_PORT) vibe_app:1


fsharpapp-build:
	cd backend/fsharpapp && docker build --build-arg FSHARPAPP_PORT=$(FSHARPAPP_PORT) $(PG_VARS_BUILD) -t fsharp_app:1 .

fsharpapp-run:
	cd backend/fsharpapp && docker run -d -it --rm --name fsharp_app_container --env FSHARPAPP_PORT=$(FSHARPAPP_PORT) $(PG_VARS) --net $(SUBNET_NAME) --ip $(FSHARPAPP_IP) -p $(FSHARPAPP_PORT):$(FSHARPAPP_PORT) fsharp_app:1


prologapp-build:
	cd backend/prologapp && docker build --build-arg PROLOGAPP_PORT=$(PROLOGAPP_PORT) $(PG_VARS_BUILD) -t prolog_app:1 .

prologapp-run:
	cd backend/prologapp && docker run -d -it --rm --name prolog_app_container --env PROLOGAPP_PORT=$(PROLOGAPP_PORT) $(PG_VARS) --net $(SUBNET_NAME) --ip $(PROLOGAPP_IP) -p $(PROLOGAPP_PORT):$(PROLOGAPP_PORT) prolog_app:1


symfonyapp-build:
	cd backend/symfonyapp && docker build --build-arg SYMFONYAPP_PORT=$(SYMFONYAPP_PORT) $(PG_VARS_BUILD) -t symfony_app:1 .

symfonyapp-run:
	cd backend/symfonyapp && docker run -d -it --rm --name symfony_app_container --env SYMFONYAPP_PORT=$(SYMFONYAPP_PORT) $(PG_VARS) --net $(SUBNET_NAME) --ip $(SYMFONYAPP_IP) -p $(SYMFONYAPP_PORT):$(SYMFONYAPP_PORT) symfony_app:1
