include .env


grpc-protos:
	docker volume create grpc-protos


grpc-server-build:
	cd other/grpc && docker build --build-arg GORPCSERVER_PORT=$(GORPCSERVER_PORT) --build-arg PG_HOST=$(PG_HOST) --build-arg PG_DB=$(PG_DB) --build-arg PG_USER=$(PG_USER) --build-arg PG_PASS=$(PG_PASS) --build-arg PG_PORT=$(PG_PORT) -t grpc_server:1 .

grpc-server-run:
	cd other/grpc && docker run -d -it --rm -v grpc-protos:/protos --name grpc_server_container --env GORPCSERVER_PORT=$(GORPCSERVER_PORT) --env PG_HOST=$(PG_HOST) --env PG_DB=$(PG_DB) --env PG_USER=$(PG_USER) --env PG_PASS=$(PG_PASS) --env PG_PORT=$(PG_PORT) --net $(SUBNET_NAME) --ip $(GORPCSERVER_IP) -p $(GORPCSERVER_PORT):$(GORPCSERVER_PORT) grpc_server:1

debugger-curl-grpc-server:
	docker exec -it debugger curl http://$(GRPC_SERVER_IP):$(GORPCSERVER_PORT)/


grpc-client-build:
	cd other/grpc && docker build --build-arg GORPCCLIENT_PORT=$(GORPCCLIENT_PORT) --build-arg GORPCSERVER_IP=$(GORPCSERVER_IP) --build-arg GORPCSERVER_PORT=$(GORPCSERVER_PORT) -t grpc_client:1 -f Dockerfile.client .

grpc-client-run:
	cd other/grpc && docker run -d -it --rm -v grpc-protos:/protos --name grpc_client_container --env GORPCCLIENT_PORT=$(GORPCCLIENT_PORT) --env GORPCSERVER_IP=$(GORPCSERVER_IP) --env GRPC_SERVER_PORT=$(GORPCCLIENT_PORT) --net $(SUBNET_NAME) --ip $(GORPCCLIENT_IP) -p $(GORPCCLIENT_PORT):$(GORPCCLIENT_PORT) grpc_client:1

debugger-curl-grpc-client:
	docker exec -it debugger curl http://$(GORPCCLIENT_IP):$(GORPCCLIENT_PORT)/


grpc-client-test:
	grpcurl -plaintext -d '{"user_id": "123"}' 127.0.0.1:50051 user.v1.UserService/GetUser
